name: Python build and test wheels

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]
    steps:
    - uses: actions/checkout@v2

    - name: Install deps
      run: |
        sudo apt-get update -y
        #sudo apt-get install -y build-essential libgdal-dev libsuitesparse-dev
        sudo apt-get install -y build-essential libsuitesparse-dev

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        environment-file: environment.yml
        miniforge-version: latest
        miniforge-variant: Mambaforge
        architecture: x64

    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH

    - name: Install poetry & package
      run: |
        poetry install
      env:
        POETRY_VIRTUALENVS_CREATE: false

    - name: Run tests
      run: |
        poetry run pytest --junitxml=test-results/junit.xml --cov=trajan -v --log-cli-level=debug

    - name: Build wheels
      run: |
        poetry build

    - name: Upload wheels
      if: matrix.python-version == '3.10'
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ linux ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *

